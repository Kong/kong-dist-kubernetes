apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kong
  name: kong
  labels:
    app: kong
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  namespace: kong
  name: kong
  labels:
    app: kong
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: kong
  name: kong
  labels:
    app: kong
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong
subjects:
- kind: ServiceAccount
  namespace: kong
  name: kong
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: kong
  name: kong-control-plane
  labels:
    app: kong-control-plane
spec:
  selector:
    matchLabels:
      app: kong-control-plane
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        k8s.konghq.com/sidecar-inject: "false"
        prometheus.io/port: "8001"
        prometheus.io/scrape: "true"
      labels:
        app: kong-control-plane
    spec:
      serviceAccountName: kong
      initContainers:
      - name: kong-migration
        image: kong
        imagePullPolicy: IfNotPresent
        env:
          - name: KONG_PG_PASSWORD
            value: kong
          - name: KONG_PG_HOST
            value: postgres.kong.svc
          - name: KONG_LICENSE_DATA
            value: 'SNIP'
        command: [ "kong", "migrations", "bootstrap" ]
      containers:
      - name: kong-control-plane
        image: kong
        imagePullPolicy: IfNotPresent
        env:
          - name: KONG_PG_PASSWORD
            value: kong
          - name: KONG_PG_HOST
            value: postgres.kong.svc
          - name: KONG_LOG_LEVEL
            value: notice
          - name: KONG_PROXY_ACCESS_LOG
            value: "/dev/stdout"
          - name: KONG_ADMIN_ACCESS_LOG
            value: "/dev/stdout"
          - name: KONG_PROXY_ERROR_LOG
            value: "/dev/stderr"
          - name: KONG_ADMIN_ERROR_LOG
            value: "/dev/stderr"
          - name: KONG_ADMIN_LISTEN
            value: 0.0.0.0:8001,0.0.0.0:8444 ssl
          - name: KONG_PROXY_LISTEN
            value: 'off'
          - name: KONG_LICENSE_DATA
            value: 'SNIP'
        ports:
        - name: admin-http
          containerPort: 8001
        - name: admin-https
          containerPort: 8444
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: 8001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: 8001
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  namespace: kong
  name: kong-control-plane
spec:
  type: NodePort
  ports:
  - name: http
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8444
    protocol: TCP
  selector:
    app: kong-control-plane
